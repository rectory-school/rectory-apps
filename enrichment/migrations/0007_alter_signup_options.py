# Generated by Django 3.2.15 on 2022-09-26 15:59

from django.db import migrations
from django.contrib.auth.management import create_permissions


def migrate_permissions(apps, schema_editor):
    """Create the permissions, especially for testing"""

    del schema_editor

    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def add_set_admin_lock(apps, schema_editor):
    migrate_permissions(apps, schema_editor)

    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    group = Group.objects.get(name="Enrichment Managers")

    permission = Permission.objects.get(
        content_type__app_label="enrichment",
        codename="set_admin_locked",
    )

    group.permissions.add(permission)


def remove_set_admin_lock(apps, schema_editor):
    migrate_permissions(apps, schema_editor)

    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    group = Group.objects.get(name="Enrichment Managers")

    permission = Permission.objects.get(
        content_type__app_label="enrichment",
        codename="set_admin_locked",
    )

    group.permissions.remove(permission)


def add_change_signup(apps, schema_editor):
    migrate_permissions(apps, schema_editor)

    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    group = Group.objects.get(name="Enrichment Managers")

    permission = Permission.objects.get(
        content_type__app_label="enrichment",
        codename="change_signup",
    )

    group.permissions.add(permission)


def remove_change_signup(apps, schema_editor):
    migrate_permissions(apps, schema_editor)

    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    group = Group.objects.get(name="Enrichment Managers")

    permission = Permission.objects.get(
        content_type__app_label="enrichment",
        codename="change_signup",
    )

    group.permissions.remove(permission)


class Migration(migrations.Migration):

    dependencies = [
        ("enrichment", "0006_auto_20220921_1749"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="signup",
            options={
                "permissions": (
                    (
                        "edit_past_lockout",
                        "Can edit enrichment signups past the lockout time",
                    ),
                    (
                        "set_admin_locked",
                        "Can set/unset admin locked, as well as ignore the flag usage",
                    ),
                    (
                        "use_admin_only_options",
                        "Can assign students to admin only options",
                    ),
                    ("assign_all_advisees", "Can assign any advisees"),
                )
            },
        ),
        migrations.RunPython(remove_change_signup, add_change_signup),
        migrations.RunPython(add_set_admin_lock, remove_set_admin_lock),
    ]
