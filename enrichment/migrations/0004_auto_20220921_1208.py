# Generated by Django 3.2.15 on 2022-09-21 16:08

from django.db import migrations
from django.contrib.auth.management import create_permissions


def migrate_permissions(apps, schema_editor):
    """Create the permissions, especially for testing"""

    del schema_editor

    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def create_enrichment_managers(apps, schema_editor):
    migrate_permissions(apps, schema_editor)

    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    required_permissions = [
        "add_locationoverride",
        "change_locationoverride",
        "delete_locationoverride",
        "add_option",
        "change_option",
        "delete_option",
        "assign_all_advisees",
        "edit_past_lockout",
        "ignore_admin_locked",
        "use_admin_only_options",
        "add_slot",
        "change_slot",
        "delete_slot",
    ]

    group = Group(name="Enrichment Managers")
    group.save()

    for perm_name in required_permissions:
        permission = Permission.objects.get(
            content_type__app_label="enrichment",
            codename=perm_name,
        )
        group.permissions.add(permission)


def delete_enrichment_managers(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Group.objects.filter(name="Enrichment Managers").delete()


class Migration(migrations.Migration):

    dependencies = [
        ("enrichment", "0003_auto_20220921_1014"),
    ]

    operations = [
        migrations.RunPython(create_enrichment_managers, delete_enrichment_managers)
    ]
