# Generated by Django 3.2.15 on 2022-09-20 05:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("blackbaud", "0003_auto_20220917_1205"),
    ]

    operations = [
        migrations.CreateModel(
            name="Slot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Any secondary description for this enrichment slot, generally not required",
                        max_length=256,
                    ),
                ),
                (
                    "editable_until",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this slot will be locked out",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=256)),
                ("description", models.CharField(blank=True, max_length=4096)),
                (
                    "admin_only",
                    models.BooleanField(
                        default=False,
                        help_text="If this option should only be assignable by admin users",
                    ),
                ),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "not_available_on",
                    models.ManyToManyField(
                        blank=True,
                        help_text="A list of slots this option should not be available on",
                        related_name="_enrichment_option_not_available_on_+",
                        to="enrichment.Slot",
                    ),
                ),
                (
                    "only_available_on",
                    models.ManyToManyField(
                        blank=True,
                        help_text="An exclusive list of slots this option should be available on",
                        related_name="_enrichment_option_only_available_on_+",
                        to="enrichment.Slot",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blackbaud.teacher",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalSlot",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField()),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Any secondary description for this enrichment slot, generally not required",
                        max_length=256,
                    ),
                ),
                (
                    "editable_until",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this slot will be locked out",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical slot",
                "verbose_name_plural": "historical slots",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSignup",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("admin_locked", models.BooleanField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="enrichment.option",
                    ),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="enrichment.slot",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="blackbaud.student",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical signup",
                "verbose_name_plural": "historical signups",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalOption",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("location", models.CharField(max_length=256)),
                ("description", models.CharField(blank=True, max_length=4096)),
                (
                    "admin_only",
                    models.BooleanField(
                        default=False,
                        help_text="If this option should only be assignable by admin users",
                    ),
                ),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="blackbaud.teacher",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical option",
                "verbose_name_plural": "historical options",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Signup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("admin_locked", models.BooleanField()),
                (
                    "option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="enrichment.option",
                    ),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enrichment.slot",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="blackbaud.student",
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "edit_past_lockout",
                        "Can edit enrichment signups past the lockout time",
                    ),
                    (
                        "ignore_admin_locked",
                        "Can edit enrichment signups regardless of admin lock",
                    ),
                    (
                        "use_admin_only_options",
                        "Can assign students to admin only options",
                    ),
                ),
                "unique_together": {("slot", "student")},
            },
        ),
        migrations.CreateModel(
            name="LocationOverride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enrichment.option",
                    ),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enrichment.slot",
                    ),
                ),
            ],
            options={
                "unique_together": {("slot", "option")},
            },
        ),
    ]
